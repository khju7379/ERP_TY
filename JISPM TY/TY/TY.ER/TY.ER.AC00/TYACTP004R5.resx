<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="UPCOUNT1.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="DOWNCOUNT1.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="UPWTOTALAMT1.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="DOWNWTOTALAMT1.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="UPWHOLDYUL1.OutputFormat" xml:space="preserve">&#xD;
    <value />&#xD;
  </data>
  <data name="DOWNWHOLDYUL1.OutputFormat" xml:space="preserve">&#xD;
    <value />&#xD;
  </data>
  <data name="UPWTAXINCOM1.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="DOWNWTAXINCOM1.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="UPWLOCALTAX1.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="DOWNWLOCALTAX1.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="UPWLSUMTAX1.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="DOWNWLSUMTAX1.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="WTOTALAMT.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="WTAXINCOM.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="WLOCALTAX.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="WLSUMTAX.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="MENCOUNT.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="TOTALCOUNT.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="TOTALWTOTALAMT.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="TOTALWTAXINCOM.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="TOTALWLOCALTAX.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="TOTALWLSUMTAX.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="label33.Text" xml:space="preserve">&#xD;
    <value>1. 이 서식은 거주자가 사업소득이 발생한 경우에만 작성하며, 비거주자는 별지 제23호서식(5)를 사용하여야 합니다.&#xD;
&#xD;
2.건별 소액 부징수되는 건수·금액은 "소액 부징수 연간합계" 란에 적으며, 원천진수의무자가 지급하는 "연간 총지급액 계" 와 "소득자별 연간소득내용(소액 부징수&#xD;
 포함) 합계" 는 일치하여야 합니다.&#xD;
&#xD;
3. ④연간 소득인원란은 소득자 성명의 인원을, ⑤연간 총지급건수란은 지급건수(소액 부징수를 포함합니다)의 합계를 각각 적으며, 소득자를 기준으로 합계하여&#xD;
제출합니다.&#xD;
&#xD;
4. ⑪업종코드란에는 소득자의 업종에 해당하는 아래의 업종구분코드를 적어야 합니다.&#xD;
&#xD;
5. ⑭내·외국인란에는 내국인의 경우는 "1"을, 외국인의 경우는 "9"를 적습니다.</value>&#xD;
  </data>
  <data name="UPCOUNT.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="DOWNCOUNT.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="UPWTOTALAMT.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="DOWNWTOTALAMT.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="UPWHOLDYUL.OutputFormat" xml:space="preserve">&#xD;
    <value />&#xD;
  </data>
  <data name="DOWNWHOLDYUL.OutputFormat" xml:space="preserve">&#xD;
    <value />&#xD;
  </data>
  <data name="UPWTAXINCOM.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="DOWNWTAXINCOM.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="UPWLOCALTAX.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="DOWNWLOCALTAX.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="UPWLSUMTAX.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <data name="DOWNWLSUMTAX.OutputFormat" xml:space="preserve">&#xD;
    <value>#,##0</value>&#xD;
  </data>
  <metadata name="$this.ScriptEditorPositionForUndo" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>0, 0</value>
  </metadata>
  <metadata name="$this.ScriptEditorPositionForRedo" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>0, 0</value>
  </metadata>
  <metadata name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>